---
- name: Machine setup
  hosts: localhost
  become: true
  connection: local
  gather_facts: true
  vars:
    flyctl_version: "0.1.130"
    pulumi_version: "v3.94.2"

  tasks:
    - name: Get my user
      ansible.builtin.set_fact:
        remote_regular_user: "{{ ansible_env.SUDO_USER or ansible_user_id }}"

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 3600

    - name: Install packages
      ansible.builtin.apt:
        name:
          - git
          - htop
          - vim
          - firefox
          - ripgrep
          - zsh
          - fzf
          - ffmpeg
          - zlib1g
          - zlib1g-dev
          - make
          - wl-clipboard
          - fd-find
          - g++
          - helix
          - build-essential
          - autoconf
          - inotify-tools
          - blender
          - toilet
          - unar
          - curl
          - wget
          - software-properties-common
          - apt-transport-https
          - ca-certificates
          - gnupg
          - lsb-release
          - qbittorrent
          - filezilla
          - flatpak
        state: present

    - name: Change shell to zsh
      ansible.builtin.user:
        name: "{{ remote_regular_user }}"
        shell: /usr/bin/zsh

    - name: Add Brave Browser repository key
      ansible.builtin.apt_key:
        url: https://brave-browser-apt-release.s3.brave.com/brave-core.asc
        state: present

    - name: Add Brave Browser repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main"
        state: present

    - name: Install Brave Browser
      ansible.builtin.apt:
        name: brave-browser
        state: present

    - name: Add Microsoft repository key
      ansible.builtin.apt_key:
        url: https://packages.microsoft.com/keys/microsoft.asc
        state: present

    - name: Add Visual Studio Code repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg] https://packages.microsoft.com/repos/code stable main"
        state: present

    - name: Install VS Code
      ansible.builtin.apt:
        name: code
        state: present

    - name: Add Docker repository key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Install Docker
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Add Docker group
      ansible.builtin.group:
        name: docker
        state: present

    - name: Add user to docker group
      ansible.builtin.user:
        name: "{{ remote_regular_user }}"
        groups: docker
        append: true

    - name: Add HashiCorp repository key
      ansible.builtin.apt_key:
        url: https://apt.releases.hashicorp.com/gpg
        state: present

    - name: Add HashiCorp repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main"
        state: present


    - name: Check if the targeted version of flyctl is installed
      ansible.builtin.command: flyctl version
      register: installed_flyctl_version
      ignore_errors: true
      changed_when: false

    - name: Download flyctl tar.gz
      ansible.builtin.get_url:
        url: "https://github.com/superfly/flyctl/releases/download/v{{ flyctl_version }}/flyctl_{{ flyctl_version }}_Linux_x86_64.tar.gz"
        dest: "/tmp/flyctl_{{ flyctl_version }}_Linux_x86_64.tar.gz"
        mode: "0644"
      when: flyctl_version not in installed_flyctl_version.stdout

    - name: Extract flyctl to /usr/local/bin
      ansible.builtin.unarchive:
        src: "/tmp/flyctl_{{ flyctl_version }}_Linux_x86_64.tar.gz"
        dest: "/usr/local/bin"
        remote_src: true
      when: flyctl_version not in installed_flyctl_version.stdout

    - name: Install Flatpak packages
      community.general.flatpak:
        name:
          - com.obsproject.Studio
          - org.videolan.VLC
          - org.tenacityaudio.Tenacity
          - md.obsidian.Obsidian
          - org.gimp.GIMP
          - rest.insomnia.Insomnia
          - com.github.zadam.trilium
          - com.spotify.Client
          - io.github.shiftey.Desktop
        state: present

    - name: Ensure fonts directory
      ansible.builtin.file:
        path: "~{{ remote_regular_user }}/.fonts"
        state: directory
        mode: "0755"
        owner: "{{ remote_regular_user }}"

    - name: Check if Jetbrains Mono exists
      ansible.builtin.shell: "ls ~{{ remote_regular_user }}/.fonts/JetBrainsMonoNerd*FontMono*"
      register: jetbrains_mono_exists
      ignore_errors: true
      changed_when: false

    - name: Download Jetbrains mono
      when: jetbrains_mono_exists is failed
      ansible.builtin.unarchive:
        src: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.1.1/JetBrainsMono.zip
        dest: "~{{ remote_regular_user }}/.fonts/"
        remote_src: true
        mode: "0755"
        owner: "{{ remote_regular_user }}"